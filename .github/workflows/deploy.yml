name: Build & Deploy (Docker Hub + VM)

on:
  push:
    branches: ['main']
    paths:
      - 'NewsFeedBackend/**'
      - 'vite-project/**'
      - '.github/workflows/**'
  workflow_dispatch: {}

concurrency:
  group: newsfeed-deploy
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DH_USER: ${{ secrets.DOCKERHUB_USERNAME }}
      DH_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DH_USER }}
          password: ${{ env.DH_TOKEN }}

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: NewsFeedBackend
          file: NewsFeedBackend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.DH_USER }}/newsfeed-backend:latest
            ${{ env.DH_USER }}/newsfeed-backend:${{ github.sha }}

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: vite-project
          file: vite-project/Dockerfile
          push: true
          platforms: linux/amd64
          build-args: |
            VITE_API_BASE=/api
          tags: |
            ${{ env.DH_USER }}/newsfeed-frontend:latest
            ${{ env.DH_USER }}/newsfeed-frontend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      VM_HOST: ${{ secrets.VM_HOST }}
      VM_USER: ${{ secrets.VM_USER }}
      VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}
    steps:
      - name: Add VM to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$VM_HOST" >> ~/.ssh/known_hosts

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USER }}
          key: ${{ env.VM_SSH_KEY }}
   
          script: |
            set -e
            cd ~/apps/newsfeed
            sudo docker compose pull
            sudo docker compose up -d
            sudo docker image prune -f
            curl -fsS http://localhost/ >/dev/null
