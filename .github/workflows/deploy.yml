name: Build & Deploy (Docker Hub + VM)

on:
  push:
    branches: ['**']
    paths:
      - 'NewsFeedBackend/**'
      - 'vite-project/**'
      - '.github/workflows/**'
  workflow_dispatch: {}

concurrency:
  group: newsfeed-deploy
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: backend
            context: NewsFeedBackend
            dockerfile: NewsFeedBackend/Dockerfile
            image: ${{ secrets.DOCKERHUB_USERNAME }}/newsfeed-backend
            buildargs: |
          - name: frontend
            context: vite-project
            dockerfile: vite-project/Dockerfile
            image: ${{ secrets.DOCKERHUB_USERNAME }}/newsfeed-frontend
            buildargs: |
              VITE_API_BASE=/api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: |
            ${{ matrix.image }}:latest
            ${{ matrix.image }}:${{ github.sha }}
          build-args: ${{ matrix.buildargs }}
          cache-from: type=registry,ref=${{ matrix.image }}:buildcache
          cache-to: type=registry,ref=${{ matrix.image }}:buildcache,mode=max

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/fixes'
    runs-on: ubuntu-latest
    steps:
      - name: Add VM to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$VM_HOST" >> ~/.ssh/known_hosts
        env:
          VM_HOST: ${{ secrets.VM_HOST }}

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            cd ~/apps/newsfeed
            sudo docker compose pull
            sudo docker compose up -d
            sudo docker image prune -f
            # quick smoke check
            curl -fsS http://localhost/ >/dev/null
