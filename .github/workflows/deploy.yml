name: Build & Deploy (Docker Hub + VM)

on:
  push:
    branches: ['main']
    paths:
      - 'NewsFeedBackend/**'
      - 'vite-project/**'
      - '.github/workflows/**'
  workflow_dispatch: {}

concurrency:
  group: newsfeed-deploy
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DH_USER: ${{ secrets.DOCKERHUB_USERNAME }}
      DH_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DH_USER }}
          password: ${{ env.DH_TOKEN }}

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: NewsFeedBackend
          file: NewsFeedBackend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.DH_USER }}/newsfeed-backend:latest
            ${{ env.DH_USER }}/newsfeed-backend:${{ github.sha }}

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: vite-project
          file: vite-project/Dockerfile
          push: true
          platforms: linux/amd64
          build-args: |
            VITE_API_BASE=/api
          tags: |
            ${{ env.DH_USER }}/newsfeed-frontend:latest
            ${{ env.DH_USER }}/newsfeed-frontend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Authenticate to Google Cloud (Service Account JSON)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Get OS Login username
        id: oslogin
        if: ${{ !secrets.OS_LOGIN_USERNAME }}
        run: |
          set -e
          USERNAME=$(gcloud compute os-login describe-profile --format='value(posixAccounts[0].username)')
          if [ -z "$USERNAME" ]; then
            echo "ERROR: No OS Login POSIX account found. Check roles and enable-oslogin." >&2
            exit 1
          fi
          echo "username=$USERNAME" >> "$GITHUB_OUTPUT"

      - name: Deploy via gcloud compute ssh (OS Login)
        env:
          INSTANCE: ${{ secrets.GCE_INSTANCE }}
          ZONE: ${{ secrets.GCE_ZONE }}
          USERNAME: ${{ secrets.OS_LOGIN_USERNAME || steps.oslogin.outputs.username }}
        run: |
          set -euo pipefail
          gcloud compute ssh "${USERNAME}@${INSTANCE}" --zone "${ZONE}" --command '
            set -e
            cd ~/apps/newsfeed
            sudo docker compose pull
            sudo docker compose up -d
            sudo docker image prune -f
            curl -fsS http://localhost/ >/dev/null
          '
