services:
  db:
    image: mysql:8.4
    environment:
      MYSQL_DATABASE: newsfeed
      MYSQL_USER: newsuser
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 3s
      retries: 30

  api:
    build:
      context: ./NewsFeedBackend
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_URLS: http://0.0.0.0:8080
      ASPNETCORE_ENVIRONMENT: Development
      Logging__LogLevel__Default: Information
      Logging__LogLevel__Microsoft.AspNetCore: Information
      ConnectionStrings__Default: Server=db;Port=3306;Database=newsfeed;User Id=newsuser;Password=${MYSQL_PASSWORD};AllowPublicKeyRetrieval=True;SslMode=Preferred
      Jwt__Key: ${JWT_KEY}
      Jwt__Issuer: NewsFeedBackend
      Jwt__Audience: NewsFeedFrontend
      NewsData__ApiKey: ${NEWSDATA_API_KEY}
      NewsData__DefaultLanguage: en
      NewsData__DefaultCountry: "US"
      NewsData__DefaultCategory: ""
      NewsData__DefaultQuery: ""
      Smtp__Host: ${SMTP_HOST}
      Smtp__Port: ${SMTP_PORT}
      Smtp__Secure: ${SMTP_SECURE}
      Smtp__User: ${SMTP_USER}
      Smtp__Password: ${SMTP_PASSWORD}
      Smtp__FromEmail: ${SMTP_FROM}
      Smtp__FromName: "My Epic News"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5001:8080"
    restart: unless-stopped

  frontend:
    image: node:20-alpine
    working_dir: /app
    command: sh -lc "npm ci && npm run dev -- --host"
    volumes:
      - ./vite-project:/app
      - /app/node_modules
      - ./vite-project/.env.development:/app/.env.development:ro
    environment:
      VITE_API_BASE: /api
    ports:
      - "5173:5173"
    depends_on:
      - api
    restart: unless-stopped

volumes:
  mysql_data:
